import { defineField, defineType } from 'sanity'

export const aboutPageType = defineType({
  name: 'aboutPage',
  title: 'About Page',
  type: 'document',
  fields: [
    defineField({
      name: 'title',
      title: 'Main Title',
      type: 'string',
      description: 'The main heading of the about page banner',
      validation: (Rule) => Rule.required(),
      initialValue: 'About Us',
    }),
    defineField({
      name: 'description',
      title: 'Description',
      type: 'text',
      description: 'The subtitle/description text below the main title',
      validation: (Rule) => Rule.required(),
      initialValue: 'From metro systems to concert halls, our sustainability projects shape a better world.',
    }),
    defineField({
      name: 'introText',
      title: 'Introductory Text',
      type: 'text',
      description: 'Longer paragraph below the banner explaining the company mission',
      initialValue:
        'We believe buildings can be perfect, because they are built on data, Data that can shape perfectly comfortable homes for every age group, weather and location Data that can help us choose materials with the lowest environmental impact. Data that can optimise how we use resources, and Data that can help even generate income from energy rather than simply paying for it Data that can inform all functional, and technical design decisions with measurable outcomes. Our mission is to harness this data to create buildings that are not just compliant, but outstanding in comfort, carbon performance, cost efficiency, and circularity. We bring clarity to Net Zero by turning complexity into simple, confident decisions.',
    }),
    defineField({
      name: 'introImage',
      title: 'Introductory Image',
      type: 'image',
      options: { hotspot: true },
      description: 'Image displayed below the introductory text',
    }),
    defineField({
      name: 'newBuildButtonText',
      title: 'New Build Button Text',
      type: 'string',
      description: 'Text for the New Build button in the observability chart',
      initialValue: 'New Build',
    }),
    defineField({
      name: 'retrofitButtonText',
      title: 'Retrofit Button Text',
      type: 'string',
      description: 'Text for the Retrofit button in the observability chart',
      initialValue: 'Retrofit',
    }),
    defineField({
      name: 'exploreNewBuildButtonText',
      title: 'Explore New Build Button Text',
      type: 'string',
      description: 'Text for the Explore New Build button',
      initialValue: 'Explore new build projects',
    }),
    defineField({
      name: 'exploreRetrofitButtonText',
      title: 'Explore Retrofit Button Text',
      type: 'string',
      description: 'Text for the Explore Retrofit button',
      initialValue: 'Explore retrofit projects',
    }),
    defineField({
      name: 'swiperImages',
      title: 'Swiper Images',
      type: 'array',
      description: 'Images to display in the swiper carousel',
      of: [
        {
          type: 'object',
          fields: [
            defineField({
              name: 'image',
              title: 'Image',
              type: 'image',
              options: { hotspot: true },
              validation: (Rule) => Rule.required(),
            }),
            defineField({
              name: 'altText',
              title: 'Alt Text',
              type: 'string',
              description: 'Alternative text for accessibility',
              validation: (Rule) => Rule.required(),
            }),
          ],
          preview: {
            select: {
              title: 'altText',
              media: 'image',
            },
          },
        },
      ],
      validation: (Rule) => Rule.min(1).max(10),
    }),
    defineField({
      name: 'mainHeading',
      title: 'Main Heading',
      type: 'string',
      description: 'Main heading for the observability chart section',
      initialValue: 'Pick your Project Type',
    }),
    defineField({
      name: 'newBuildIntroText',
      title: 'New Build Introduction Text',
      type: 'text',
      description: 'Introduction text for the new build section',
      initialValue: 'Ever wondered what might\'ve happened if you chose a different strategy, system, or construction method? One that could have performed better over the long term?',
    }),
    defineField({
      name: 'newBuildSubText',
      title: 'New Build Sub Text',
      type: 'string',
      description: 'Sub text for the new build section',
      initialValue: 'Now you don\'t have to wonder.',
    }),
    defineField({
      name: 'newBuildDescription',
      title: 'New Build Description',
      type: 'text',
      description: 'Detailed description for the new build section',
      initialValue: 'Our 5C Zero New Build Framework allows teams to explore over 1,000 design options at any stage of the design. We combine our expertise in building physics, dynamic simulation modelling, life cycle assessment with in-house datasets covering all of the 5Cs to rapidly score and filter high-performing options.',
    }),
    defineField({
      name: 'newBuildThermalText',
      title: 'New Build Thermal Text',
      type: 'text',
      description: 'Text about thermal imaging and monitoring',
      initialValue: 'We combine this with thermal imaging, moisture readings, air permeability tests, internal climate sensors, and smart HTC monitoring to build a performance scorecard of the building\'s current state.',
    }),
    defineField({
      name: 'newBuildSummaryText',
      title: 'New Build Summary Text',
      type: 'text',
      description: 'Summary text for new build section',
      initialValue: 'We eliminate poor-performing and non-compliant options and score the remaining against the client\'s priorities. This helps us get clear, evidence-based rationale for the design decisions. We recommend using these outputs to develop brief for architects and engineers',
    }),
    defineField({
      name: 'newBuildResultText',
      title: 'New Build Result Text',
      type: 'string',
      description: 'Result text for new build section',
      initialValue: 'The result: A confident, futureproof path to Net Zero from day one.',
    }),
    defineField({
      name: 'retrofitIntroText',
      title: 'Retrofit Introduction Text',
      type: 'string',
      description: 'Introduction text for retrofit section',
      initialValue: 'We then simulate and compare retrofit pathways:',
    }),
    defineField({
      name: 'retrofitDescription',
      title: 'Retrofit Description',
      type: 'text',
      description: 'Description text for retrofit section',
      initialValue: 'Each is evaluated across the building\'s future lifecycle, scored against the 5Cs, and mapped to your priorities.',
    }),
    defineField({
      name: 'retrofitResultText',
      title: 'Retrofit Result Text',
      type: 'string',
      description: 'Result text for retrofit section',
      initialValue: 'The result: a clear pathway to improvement that\'s aligned with both project\'s values and Net Zero goals.',
    }),
    defineField({
      name: 'defaultHeading',
      title: 'Default State Heading',
      type: 'string',
      description: 'Heading text when no project type is selected',
      initialValue: 'Select a project type to view the optioneering visualization',
    }),
    defineField({
      name: 'defaultDescription',
      title: 'Default State Description',
      type: 'text',
      description: 'Description text when no project type is selected',
      initialValue: 'Choose between New Build or Retrofit to explore different design options and performance scenarios.',
    }),
    defineField({
      name: 'isActive',
      title: 'Is Active',
      type: 'boolean',
      description: 'Only one about page configuration should be active at a time',
      initialValue: true,
    }),
  ],
  preview: {
    select: {
      title: 'title',
      isActive: 'isActive',
    },
    prepare({ title, isActive }) {
      return {
        title: title || 'About Page Banner',
        subtitle: isActive ? 'Active' : 'Inactive',
      }
    },
  },
})
